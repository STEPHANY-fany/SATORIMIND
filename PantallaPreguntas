package com.example.mysatoro

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.itemsIndexed
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Brush
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavController


@Composable
fun TestScreen(navController: NavController) {
    val questions = listOf(
        "¿Te has sentido preocupado/a o nervioso/a la mayoría de los días?",
        "¿Has experimentado latidos acelerados o sensación de ahogo sin causa física?",
        "¿Tienes dificultad para dormir o te despiertas muy temprano?",
        "¿Evitas reuniones sociales por miedo o malestar?",
        "¿Tienes tensión muscular o rigidez sin esfuerzo físico previo?"
    )

    val respuestas = remember { mutableStateListOf<Boolean?>(null, null, null, null, null) }
    var resultado by remember { mutableStateOf<String?>(null) }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(
                brush = Brush.verticalGradient(
                    colors = listOf(
                        Color(0xFF3F27A8),
                        Color(0xFFB48CF2),
                        Color(0xFF00C2FA)
                    )
                )
            )
    ) {
        Button(
            onClick = { navController.popBackStack() },
            modifier = Modifier.padding(12.dp)
        ) {
            Text("Volver", fontSize = 16.sp)
        }

        Image(
            painter = painterResource(id = R.drawable.encabezado_test),
            contentDescription = null,
            modifier = Modifier
                .fillMaxWidth()
                .height(120.dp),
            contentScale = ContentScale.FillWidth
        )

        LazyColumn(
            modifier = Modifier
                .fillMaxSize()
                .padding(16.dp)
                .background(Color(0xFFB48CF2)),
            verticalArrangement = Arrangement.spacedBy(12.dp),
            contentPadding = PaddingValues(bottom = 80.dp)
        ) {
            item {
                Text(
                    text = "Test de Ansiedad",
                    fontSize = 24.sp,
                    color = Color(0xFF0D47A1)
                )
            }

            itemsIndexed(questions) { index, pregunta ->
                Column {
                    Text(text = pregunta, fontSize = 12.sp)
                    Row(horizontalArrangement = Arrangement.spacedBy(8.dp)) {
                        Button(
                            onClick = { respuestas[index] = true },
                            colors = ButtonDefaults.buttonColors(
                                containerColor = if (respuestas[index] == true) Color.Blue else Color.LightGray
                            )
                        ) {
                            Text("Sí")
                        }
                        Button(
                            onClick = { respuestas[index] = false },
                            colors = ButtonDefaults.buttonColors(
                                containerColor = if (respuestas[index] == false) Color.Blue else Color.LightGray
                            )
                        ) {
                            Text("No")
                        }
                    }
                }
            }

            item {
                Button(
                    onClick = {
                        val si = respuestas.count { it == true }
                        resultado = if (si >= 3) {
                            "Se recomienda hacer ejercicios de respiración."
                        } else {
                            "Se recomienda escuchar audios relajantes."
                        }
                    },
                    enabled = respuestas.all { it != null },
                    modifier = Modifier.align(Alignment.CenterHorizontally)
                ) {
                    Text("Enviar")
                }

                resultado?.let {
                    Text(
                        text = it,
                        fontSize = 18.sp,
                        color = Color(0xFFFFFFFF),
                        modifier = Modifier.padding(top = 16.dp)
                    )
                }
            }
        }
    }
}
