package com.example.mysatoro

import android.media.MediaPlayer
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.material3.Button
import androidx.compose.material3.Text
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Brush
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavController
import androidx.compose.foundation.clickable
import androidx.compose.ui.Alignment
import android.net.Uri
import android.widget.VideoView
import androidx.compose.ui.viewinterop.AndroidView



@Composable
fun CrisisScreen(navController: NavController) {
    // Contexto y MediaPlayer
    val context = LocalContext.current
    val mediaPlayer = remember { MediaPlayer.create(context, R.raw.audione) }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(
                brush = Brush.verticalGradient(
                    colors = listOf(
                        Color(0xFF00C2FA),
                        Color(0xFF0A1C3D)
                    ),
                    startY = 0f,
                    endY = Float.POSITIVE_INFINITY
                )
            )
    )

    {
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(horizontal = 16.dp, vertical = 8.dp),
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically
        ) {
            // Botón "Volver" a la izquierda
            Button(
                onClick = { navController.popBackStack() },
                modifier = Modifier.height(50.dp)
            ) {
                Text("Volver", fontSize = 11.sp)
            }


            Row(
                verticalAlignment = Alignment.CenterVertically
            ) {

                Column(horizontalAlignment = Alignment.CenterHorizontally) {
                    Image(
                        painter = painterResource(id = R.drawable.icono_musica),
                        contentDescription = "Reproducir",
                        modifier = Modifier
                            .size(50.dp)
                            .clickable { mediaPlayer.start() }
                    )
                    Text("Reproducir", fontSize = 11.sp, color = Color.White)
                }

                Spacer(modifier = Modifier.width(16.dp))


                Column(horizontalAlignment = Alignment.CenterHorizontally) {
                    Image(
                        painter = painterResource(id = R.drawable.icono_pausa),
                        contentDescription = "Pausar",
                        modifier = Modifier
                            .size(45.dp)
                            .clickable { mediaPlayer.pause() }
                    )
                    Text("Pausar", fontSize = 11.sp, color = Color.White)
                }
            }
        }


            Image(
                painter = painterResource(id = R.drawable.encabezado_cris),
                contentDescription = null,
                modifier = Modifier
                    .fillMaxWidth()
                    .height(180.dp),
                contentScale = ContentScale.FillWidth
            )

        Spacer(modifier = Modifier.width(25.dp))

        Text("Realiza la siguiente meditación te ayudará a salir de la crisis , busca un lugar y postura comoda , utiliza audifonos para mejores resultados ", fontSize = 16.sp, color = Color.White)

        val context = LocalContext.current
        val videoUri = Uri.parse("android.resource://${context.packageName}/${R.raw.meditacion}")
        var playVideo by remember { mutableStateOf(false) }

        if (playVideo) {
            AndroidView(
                factory = {
                    VideoView(it).apply {
                        setVideoURI(videoUri)
                        setOnPreparedListener { mp ->
                            mp.isLooping = true
                            start()
                        }
                    }
                },
                modifier = Modifier
                    .fillMaxWidth()
                    .height(500.dp)
                    .padding(16.dp)
            )
        } else {
            Button(
                onClick = { playVideo = true },
                modifier = Modifier
                    .padding(16.dp)
                    .fillMaxWidth()
            ) {
                Text("Iniciar Video")
            }
        }

            DisposableEffect(Unit) {
                onDispose {
                    mediaPlayer.release()
                }
            }

        }

    }
